mov ax, 0x2000
mov es, ax
mov ds, ax

mov cx, 0x0013
mov dx, 0x0080 ;yep
mov ax, 0x0301 ;ah 3 write sectors al 0d write 14 sectors
mov bx, zeros
wipe_loop:
	pusha
	int 13h
	popa
	inc cl
	cmp cl, 0x13+14 ;i dont really care to calculate this, but it would be like 0x21 32+1 =33 which is 19+14 which is 16 + 16 + 1
	jne wipe_loop

mov si, message
mov ah, 0x03
mov bx, hdd_code
mov cx, 0x0001
mov al, 2
mov dx, 0x0080
int 13h
jc failed

mov ah, 0x03
mov bx, hdd_code_2s
mov cx, 0x000a
mov al, 1
mov dx, 0x0080
int 13h

;Geometry simple: cl max is sectors per track*sides -1, then for each max cl is +1 dh. We don't need ch for this one
mov si, ask_volumename
call print

mov cx, 11
mov di, filename_buf
get_filename_loop:
	mov ah, 0
	int 16h
	cmp al, 13
	je done_getting
	mov ah, 0x0e
	int 0x10
	stosb
	loop get_filename_loop
done_getting:
	cmp cx, 0
	je really_done
	save_extra_zeros:
		mov [di], byte 32
		inc di
		loop save_extra_zeros
	really_done:
	mov byte [di], 08h
	mov cx, 0x0014
	mov dx, 0x0080 ;yep
	mov ax, 0x0301 ;ah 3 write sectors al 0d write 14 sectors
	mov bx, filename_buf
	int 13h
	jc failed
	
do_ret:
retf



failed:
	call print
	retf
	
print:
	lodsb
	cmp al, 0
	je done
	mov ah, 0x0e
	int 0x10
	jmp print
done:
	ret

message db 'Failed to format disk', 0
ask_volumename db 'Volume label: ', 0
hdd_code db 0xEB, 0x3C, 0x90, 0x54, 0x4F, 0x4D, 0x42, 0x4F, 0x4F, 0x54, 0x20, 1 dup(0), 0x02, 0x01, 0x01, 1 dup(0), 0x02, 0xE0, 1 dup(0), 0x40, 0x0B, 0xF0, 0x09, 1 dup(0), 0x12, 1 dup(0), 0x02, 11 dup(0), 0x29, 0x75, 0x60, 0x34, 0x49, 0x54, 0x4F, 0x4D, 0x4D, 0x59, 0x4F, 0x53, 0x20, 0x20, 0x20, 0x20, 0x46, 0x41, 0x54, 0x31, 0x32, 0x20, 0x20, 0x20, 0xB8, 0xC0, 0x07, 0x05, 0x20, 0x02, 0xFA, 0x8E, 0xD0, 0xBC, 1 dup(0), 0x10, 0xFB, 0xB8, 0xC0, 0x07, 0x8E, 0xD8, 0x80, 0xFA, 1 dup(0), 0x74, 0x1D, 0x88, 0x16, 0xCB, 0x01, 0xB4, 0x08, 0xCD, 0x13, 0x0F, 0x82, 0x8D, 1 dup(0), 0x83, 0xE1, 0x3F, 0x89, 0x0E, 0x18, 1 dup(0), 0x0F, 0xB6, 0xD6, 0x83, 0xC2, 0x01, 0x89, 0x16, 0x1A, 1 dup(0), 0x66, 0xB8, 4 dup(0), 0xB8, 0x13, 1 dup(0), 0xE8, 0x13, 0x01, 0xBE, 1 dup(0), 0x02, 0x8C, 0xDB, 0x8E, 0xC3, 0x89, 0xF3, 0xB4, 0x02, 0xB0, 0x0E, 0x60, 0x61, 0x60, 0xF9, 0xCD, 0x13, 0x73, 0x08, 0xE8, 0xEC, 1 dup(0), 0x73, 0xF4, 0xE9, 0xCD, 1 dup(0), 0x61, 0x8C, 0xD8, 0x8E, 0xC0, 0xBF, 1 dup(0), 0x02, 0x8B, 0x0E, 0x11, 1 dup(0), 0xB8, 2 dup(0), 0x87, 0xCA, 0xBE, 0xBC, 0x01, 0xB9, 0x0B, 1 dup(0), 0xF3, 0xA6, 0x74, 0x15, 0x83, 0xC0, 0x20, 0xBF, 1 dup(0), 0x02, 0x01, 0xC7, 0x87, 0xD1, 0xE2, 0xE8, 0xBE, 0xC9, 0x01, 0xE8, 0xAC, 1 dup(0), 0xE9, 0x9D, 1 dup(0), 0x26, 0x8B, 0x45, 0x0F, 0xA3, 0xCC, 0x01, 0xB8, 0x01, 1 dup(0), 0xE8, 0xB9, 1 dup(0), 0xBF, 1 dup(0), 0x02, 0x89, 0xFB, 0xB4, 0x02, 0xB0, 0x09, 0x60, 0x61, 0x60, 0xF9, 0xCD, 0x13, 0x73, 0x0D, 0xE8, 0x96, 1 dup(0), 0x73, 0xF4, 0xBE, 0xC7, 0x01, 0xE8, 0x80, 1 dup(0), 0xEB, 0x72, 0x61, 0xB8, 1 dup(0), 0x10, 0x8E, 0xC0, 0xBB, 2 dup(0), 0xB4, 0x02, 0xB0, 0x01, 0x50, 0xA1, 0xCC, 0x01, 0x83, 0xC0, 0x1F, 0xE8, 0x84, 1 dup(0), 0xB8, 1 dup(0), 0x10, 0x8E, 0xC0, 0x8B, 0x1E, 0xCE, 0x01, 0x58, 0x50, 0xF9, 0xCD, 0x13, 0x73, 0x05, 0xE8, 0x62, 1 dup(0), 0xEB, 0xE2, 0xA1, 0xCC, 0x01, 0xBA, 2 dup(0), 0xBB, 0x03, 1 dup(0), 0xF7, 0xE3, 0xBB, 0x02, 1 dup(0), 0xF7, 0xF3, 0xBE, 1 dup(0), 0x02, 0x01, 0xC6, 0x3E, 0x8B, 0x04, 0x09, 0xD2, 0x74, 0x05, 0xC1, 0xE8, 0x04, 0xEB, 0x03, 0x25, 0xFF, 0x0F, 0xA3, 0xCC, 0x01, 0x3D, 0xF8, 0x0F, 0x73, 0x08, 0x81, 0x06, 0xCE, 0x01, 1 dup(0), 0x02, 0xEB, 0xAE, 0x58, 0x8A, 0x16, 0xCB, 0x01, 0x8B, 0x0E, 0x18, 1 dup(0), 0x8B, 0x1E, 0x1A, 1 dup(0), 0xEA, 3 dup(0), 0x10, 0xB8, 2 dup(0), 0xCD, 0x16, 0xB8, 2 dup(0), 0xCD, 0x19, 0xEB, 0xFE, 0x60, 0xB4, 0x0E, 0xAC, 0x3C, 1 dup(0), 0x74, 0x04, 0xCD, 0x10, 0xEB, 0xF7, 0x61, 0xC3, 0x50, 0x52, 0xB8, 2 dup(0), 0x8A, 0x16, 0xCB, 0x01, 0xF9, 0xCD, 0x13, 0x5A, 0x58, 0xC3, 0x53, 0x50, 0x89, 0xC3, 0xBA, 2 dup(0), 0xF7, 0x36, 0x18, 1 dup(0), 0x80, 0xC2, 0x01, 0x88, 0xD1, 0x89, 0xD8, 0xBA, 2 dup(0), 0xF7, 0x36, 0x18, 1 dup(0), 0xBA, 2 dup(0), 0xF7, 0x36, 0x1A, 1 dup(0), 0x88, 0xD6, 0x88, 0xC5, 0x58, 0x5B, 0x8A, 0x16, 0xCB, 0x01, 0xC3, 0x4B, 0x45, 0x52, 0x4E, 0x45, 0x4C, 0x20, 0x20, 0x42, 0x49, 0x4E, 0x46, 1 dup(0), 0x4B, 52 dup(0), 0x55, 0xAA
hdd_code_2s: ;mega smart move here
db 0xF8
dw 0ffffh
filename_buf times 10 db 0 ;im a genius
db 08h
zeros times 512 db 0

